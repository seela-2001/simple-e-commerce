# Generated by Django 5.1 on 2024-08-20 16:14

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        validators=[django.core.validators.MinLengthValidator(3)],
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default="/placeholder.png",
                        null=True,
                        upload_to="store\\static\\images\\product_images",
                    ),
                ),
                (
                    "brand",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        validators=[django.core.validators.MinLengthValidator(5)],
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        validators=[django.core.validators.MinLengthValidator(5)],
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "rating",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "num_reviews",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "price",
                    models.FloatField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "count_in_stock",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "products",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("name",), name="unique_product_name"
                    ),
                    models.CheckConstraint(
                        condition=models.Q(("rating__gte", 0), ("rating__lte", 5)),
                        name="valid_rating",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(("price__gte", 0)), name="non_negative_price"
                    ),
                    models.CheckConstraint(
                        condition=models.Q(("num_reviews__gte", 0)),
                        name="non_negative_num_review",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(("count_in_stock__gte", 0)),
                        name="non_negative_count_in_stock",
                    ),
                ],
            },
        ),
    ]
